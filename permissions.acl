/**
 * Access control rules. These rules allow anyone to submit AuthorizeAccess
 * and RevokeAccess transaction as well as granting full access to a member's
 * own record. A member can access another member's details if the member has
 * added them to their authorized list.
 */

rule OwnRecordFullAccess {
    description: "Allow all participants full access to their own data"
    participant(p): "org.healthcare.records.User"
    operation: ALL
    resource(r): "org.healthcare.records.User"
    condition: (r.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule ForeignRecordConditionalAccess {
    description: "Allow participants access to other people's data if granted"
    participant(p): "org.healthcare.records.User"
    operation: ALL
    resource(r): "org.healthcare.records.User"
    condition: (r.authorized && r.authorized.indexOf(p.getIdentifier()) > -1)
    action: ALLOW
}


rule AuthorizeAccessTransaction {
    description: "Allow all participants to submit AuthorizeAccess transactions"
    participant: "ANY"
    operation: CREATE
    resource: "org.healthcare.records.AuthorizeAccess"
    action: ALLOW
}

rule RevokeAccessTransaction {
    description: "Allow all participants to submit RevokeAccess transactions"
    participant: "ANY"
    operation: CREATE
    resource: "org.healthcare.records.RevokeAccess"
    action: ALLOW
}


rule ForeignAddReportConditionalAccess {
    description: "Allow participants to create reports (submit addReport transactions) for other users if granted"
    participant(p): "org.healthcare.records.User"
    operation: CREATE
    resource(r): "org.healthcare.records.addReport"
    condition: (r.user.authorized && r.user.authorized.indexOf(p.getIdentifier()) > -1)
    action: ALLOW
}

rule OwnAddReportFullAccess {
    description: "Allow participants to create reports (submit addReport transactions) for themselves"
    participant(p): "org.healthcare.records.User"
    operation: CREATE
    resource(r): "org.healthcare.records.addReport"
    condition: (r.user.getIdentifier() === p.getIdentifier())
    action: ALLOW
}


rule ForeignUpdateHealthDataConditionalAccess {
    description: "Allow participants to update health data (submit updateHealthData transactions) for other users if granted"
    participant(p): "org.healthcare.records.User"
    operation: CREATE
    resource(r): "org.healthcare.records.updateHealthData"
    condition: (r.user.authorized && r.user.authorized.indexOf(p.getIdentifier()) > -1)
    action: ALLOW
}

rule OwnUpdateHealthDataFullAccess {
    description: "Allow participants to create reports (submit updateHealthData transactions) for themselves"
    participant(p): "org.healthcare.records.User"
    operation: CREATE
    resource(r): "org.healthcare.records.updateHealthData"
    condition: (r.user.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

/*
rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}
*/

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule ParticipantUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.Participant"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}
